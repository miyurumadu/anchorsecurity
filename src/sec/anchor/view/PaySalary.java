/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sec.anchor.view;

import java.io.InputStream;
import java.sql.SQLException;
import java.text.DateFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import sec.anchor.controller.EmployeeController;
import sec.anchor.controller.SalaryConstController;
import sec.anchor.controller.SalaryController;
import sec.anchor.model.Salary;
import sec.anchor.model.SalaryCons;

/**
 *
 * @author Miyuru Madusanka
 */
public class PaySalary extends javax.swing.JPanel {

    /**
     * Creates new form AddEmployee
     */
    String datefrom;
    String dateto;
    double totalSalary;
    double totalEarning;
    SalaryCons searchSalaryCons;
    double netSalaryPerMonth;
    double fullBasic;
    String currendate;
    String[] nic;
    double totaldedction;
    int paysheetType = 0;
    boolean isPayed;

    public PaySalary() {
        try {
            initComponents();
            AutoCompleteDecorator.decorate(nicCombo);
            fillNicComboBox();
            nicCombo.setSelectedItem(null);
            String[] nic = (nicCombo.getSelectedItem() + "").split("-");
            searchSalaryCons = SalaryConstController.searchSalaryCons(nic[nic.length - 1]);
            searchSalaryCons();
            advanceText.setText("0.00");
            uniformText.setText("0.00");
            fineText.setText("0.00");
            netSalary.setText("0.00");
            extraText.setText("0.00");
            payButton.setEnabled(false);
            yesCheckBox.setSelected(false);
            Date d = new Date();
            SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");
            currendate = dateFormat.format(d);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nicCombo = new org.jdesktop.swingx.JXComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        datefrompicker = new org.jdesktop.swingx.JXDatePicker();
        datetopicker = new org.jdesktop.swingx.JXDatePicker();
        workhoursText = new javax.swing.JTextField();
        otText = new javax.swing.JTextField();
        otherAlText = new javax.swing.JTextField();
        totalSalaryText = new javax.swing.JTextField();
        advanceText = new javax.swing.JTextField();
        uniformText = new javax.swing.JTextField();
        fineText = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        yesCheckBox = new javax.swing.JCheckBox();
        jLabel31 = new javax.swing.JLabel();
        extraText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        basicSalaryText = new javax.swing.JTextField();
        budgetText = new javax.swing.JTextField();
        workrateText = new javax.swing.JTextField();
        overTimeText = new javax.swing.JTextField();
        epfempconText = new javax.swing.JTextField();
        etfempText = new javax.swing.JTextField();
        epfempcompText = new javax.swing.JTextField();
        totalEPFETFText = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        epfEmpAmountText = new javax.swing.JTextField();
        etfEmpamountText = new javax.swing.JTextField();
        epfComAmountText = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        netSalary = new javax.swing.JLabel();
        payButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        contactLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        epflabel = new javax.swing.JLabel();
        etflabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        epfDeduction = new javax.swing.JLabel();
        finalizeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        setPreferredSize(new java.awt.Dimension(1024, 568));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel2.setText("NIC Number:");

        nicCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicComboActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel4.setText("Work Days:");

        jLabel5.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel5.setText("Date From:");

        jLabel6.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel6.setText("Date To:");

        jLabel7.setFont(new java.awt.Font("Source Sans Pro", 0, 14)); // NOI18N
        jLabel7.setText("Deductions");

        jLabel8.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel8.setText("Advance (Rs.):");

        jLabel9.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel9.setText("Uniform(Rs.):");

        jLabel10.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel10.setText("Fines(Rs.):");

        jLabel11.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel11.setText("Overtime:");

        jLabel12.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel12.setText("Other Allowances:");

        jLabel13.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel13.setText("Total Salary(Rs.).");

        datefrompicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datefrompickerActionPerformed(evt);
            }
        });

        datetopicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datetopickerActionPerformed(evt);
            }
        });

        workhoursText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workhoursTextActionPerformed(evt);
            }
        });
        workhoursText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                workhoursTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                workhoursTextKeyReleased(evt);
            }
        });

        otText.setEditable(false);
        otText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otTextActionPerformed(evt);
            }
        });

        otherAlText.setEditable(false);

        totalSalaryText.setEditable(false);

        fineText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fineTextActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel29.setText("EPF Deduction:");

        yesCheckBox.setFont(new java.awt.Font("Source Sans Pro Light", 0, 16)); // NOI18N
        yesCheckBox.setText("Yes");

        jLabel31.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel31.setText("Extra Payment:");

        extraText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extraTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(uniformText)
                                    .addComponent(fineText, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(advanceText)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(yesCheckBox)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(workhoursText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(totalSalaryText))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(otText, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(otherAlText, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(extraText)))
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nicCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(datetopicker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addComponent(datefrompicker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nicCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(datefrompicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(datetopicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(extraText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(workhoursText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(otText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(otherAlText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(totalSalaryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(yesCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(advanceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(uniformText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(fineText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salary Constants", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel14.setText("Basic Salary:");

        jLabel15.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel15.setText("Budget Allowances:");

        jLabel16.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel16.setText("OverTime Rate per hour:");

        jLabel17.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel17.setText("Work Rate:");

        jLabel18.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel18.setText("EPF Emp.Contribution (%):");

        jLabel19.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel19.setText("ETF Employee (%):");

        jLabel20.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel20.setText("EPF Comp.Contribution (%):");

        jLabel21.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel21.setText("Total EPF/ETF Company:");

        basicSalaryText.setEditable(false);

        budgetText.setEditable(false);

        workrateText.setEditable(false);

        overTimeText.setEditable(false);

        epfempconText.setEditable(false);

        etfempText.setEditable(false);

        epfempcompText.setEditable(false);

        totalEPFETFText.setEditable(false);

        jLabel23.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel23.setText("Rs.:");

        jLabel27.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel27.setText("Rs.:");

        jLabel28.setFont(new java.awt.Font("Source Sans Pro", 0, 16)); // NOI18N
        jLabel28.setText("Rs.:");

        epfEmpAmountText.setEditable(false);

        etfEmpamountText.setEditable(false);

        epfComAmountText.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(basicSalaryText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(workrateText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(budgetText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(overTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalEPFETFText, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(epfempcompText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                    .addComponent(etfempText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(epfempconText, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(epfEmpAmountText, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(etfEmpamountText))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel28)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(epfComAmountText))))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(basicSalaryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(budgetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(workrateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(overTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(epfempconText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(epfEmpAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etfempText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel27)
                    .addComponent(etfEmpamountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(epfempcompText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(epfComAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(totalEPFETFText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel22.setFont(new java.awt.Font("Source Sans Pro", 0, 24)); // NOI18N
        jLabel22.setText("Net Salary (Rs.):");

        netSalary.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        netSalary.setText("0.00");
        netSalary.setFocusable(false);

        payButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        payButton.setText("pay");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee Details"));

        nameLabel.setText("Name:");

        addressLabel.setText("Address:");

        contactLabel.setText("Contact:");

        jLabel25.setText("EPF No.: ");

        jLabel26.setText("ETF No.:");

        epflabel.setText("EPF");

        etflabel.setText("ETF");

        jLabel1.setText("Contact No:");

        jLabel3.setText("Address:");

        jLabel24.setText("Name:");

        jLabel30.setText("ETF Deduction:");

        epfDeduction.setText("Yes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(addressLabel)
                    .addComponent(contactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epflabel)
                    .addComponent(etflabel)
                    .addComponent(epfDeduction))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addressLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(contactLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(epflabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(etflabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(epfDeduction))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        finalizeButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        finalizeButton.setText("Finalize");
        finalizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(netSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(finalizeButton)
                                .addGap(18, 18, 18)
                                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(netSalary))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(finalizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(76, 76, 76))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nicComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicComboActionPerformed
        yesCheckBox.setSelected(false);
        searchEmp();
        searchSalaryCons();
        isPayed = false;
    }//GEN-LAST:event_nicComboActionPerformed

    private void datefrompickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datefrompickerActionPerformed
        Date d1 = datefrompicker.getDate();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY-MM-dd");
        datefrom = simpleDateFormat.format(d1);
    }//GEN-LAST:event_datefrompickerActionPerformed

    private void datetopickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datetopickerActionPerformed
        Date d1 = datefrompicker.getDate();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY-MM-dd");
        dateto = simpleDateFormat.format(d1);
    }//GEN-LAST:event_datetopickerActionPerformed

    private void otTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otTextActionPerformed

    }//GEN-LAST:event_otTextActionPerformed

    private void workhoursTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workhoursTextActionPerformed

        isPayed();
        if (isPayed) {
        } else {
            totalEarning = Double.parseDouble(extraText.getText()) + Double.parseDouble(workhoursText.getText()) * searchSalaryCons.getWorkrate();
            fullBasic = searchSalaryCons.getBasic_salary() + searchSalaryCons.getBudget_al();
            if (totalEarning > fullBasic) {
                totalSalary = totalEarning;
                double allowances = totalSalary - (fullBasic);
                if (allowances > (searchSalaryCons.getOtlimit() * 75)) {
                    otText.setText((searchSalaryCons.getOtlimit() * 75) + "");
                    otherAlText.setText((allowances - searchSalaryCons.getOtlimit() * 75) + "");
                } else {
                    otText.setText(allowances + "");
                    otherAlText.setText(0.00 + "");
                }
                totalSalaryText.setText(totalSalary + "");
                netSalary.setText(totalSalary + "");

            } else {
                totalSalary = totalEarning;
                otText.setText(totalSalary + "");
                otText.setText(0.00 + "");
                otherAlText.setText(0.00 + "");
                totalSalaryText.setText(totalSalary + "");
                netSalary.setText(totalSalary + "");
                //paysheet2();
            }
            paysheetType = 0;
        }
    }//GEN-LAST:event_workhoursTextActionPerformed

    private void fineTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fineTextActionPerformed

    }//GEN-LAST:event_fineTextActionPerformed

    private void finalizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeButtonActionPerformed
        double netSalaryForMonth = 0.00;
        if (searchSalaryCons.isDeduction() && yesCheckBox.isSelected()) {
            totaldedction = (Double.parseDouble(advanceText.getText()) + Double.parseDouble(uniformText.getText()) + Double.parseDouble(fineText.getText()) + fullBasic * searchSalaryCons.getEpf_empl() / 100);
            netSalaryForMonth = totalSalary - (Double.parseDouble(advanceText.getText()) + Double.parseDouble(uniformText.getText()) + Double.parseDouble(fineText.getText()) + fullBasic * searchSalaryCons.getEpf_empl() / 100);
        } else {
            totaldedction = (Double.parseDouble(advanceText.getText()) + Double.parseDouble(uniformText.getText()) + Double.parseDouble(fineText.getText()));
            netSalaryForMonth = totalSalary - (Double.parseDouble(advanceText.getText()) + Double.parseDouble(uniformText.getText()) + Double.parseDouble(fineText.getText()));
        }
        netSalary.setText((netSalaryForMonth) + "");
        advanceText.setEditable(false);
        fineText.setEditable(false);
        uniformText.setEditable(false);
        payButton.setEnabled(true);
        if (totalEarning > fullBasic) {
            paysheetType = 1;
            paysheet1();

        } else {
            paysheetType = 2;
            paysheet2();
        }

    }//GEN-LAST:event_finalizeButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        String[] nic = (nicCombo.getSelectedItem() + "").split("-");
        Salary salary = new Salary(nic[nic.length - 1], datefrom, dateto, Integer.parseInt(workhoursText.getText()), Double.parseDouble(otText.getText()), Double.parseDouble(otherAlText.getText()),
                totalSalary, Double.parseDouble(advanceText.getText()), Double.parseDouble(uniformText.getText()), Double.parseDouble(fineText.getText()), yesCheckBox.isSelected() ? Double.parseDouble(epfEmpAmountText.getText()) : 0.00,
                Double.parseDouble(etfEmpamountText.getText()), Double.parseDouble(epfComAmountText.getText()), Double.parseDouble(netSalary.getText()), currendate);
        try {
            int res = SalaryController.addSalary(salary);
            if (res > 0) {
                JOptionPane.showMessageDialog(this, "Salary Paid!");
                if (paysheetType == 1) {
                    paysheet1();
                } else if (paysheetType == 2) {
                    paysheet2();
                }
                emptyFields();
                resetButton();
                nicCombo.requestFocus();

            } else {
                JOptionPane.showMessageDialog(this, "Could Not Pay the salary", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void workhoursTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_workhoursTextKeyReleased
        String txt = workhoursText.getText();
        int caretPosition = workhoursText.getCaretPosition();
        if (!txt.matches("^[0-9]{0,2}$")) {
            workhoursText.setText(txt.substring(0, caretPosition - 1) + txt.substring(caretPosition));
            workhoursText.setCaretPosition(caretPosition - 1);
        }
    }//GEN-LAST:event_workhoursTextKeyReleased

    private void workhoursTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_workhoursTextKeyPressed

    }//GEN-LAST:event_workhoursTextKeyPressed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        resetButton();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void extraTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extraTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extraTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField advanceText;
    private javax.swing.JTextField basicSalaryText;
    private javax.swing.JTextField budgetText;
    private javax.swing.JLabel contactLabel;
    private org.jdesktop.swingx.JXDatePicker datefrompicker;
    private org.jdesktop.swingx.JXDatePicker datetopicker;
    private javax.swing.JTextField epfComAmountText;
    private javax.swing.JLabel epfDeduction;
    private javax.swing.JTextField epfEmpAmountText;
    private javax.swing.JTextField epfempcompText;
    private javax.swing.JTextField epfempconText;
    private javax.swing.JLabel epflabel;
    private javax.swing.JTextField etfEmpamountText;
    private javax.swing.JTextField etfempText;
    private javax.swing.JLabel etflabel;
    private javax.swing.JTextField extraText;
    private javax.swing.JButton finalizeButton;
    private javax.swing.JTextField fineText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel netSalary;
    private org.jdesktop.swingx.JXComboBox nicCombo;
    private javax.swing.JTextField otText;
    private javax.swing.JTextField otherAlText;
    private javax.swing.JTextField overTimeText;
    private javax.swing.JButton payButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField totalEPFETFText;
    private javax.swing.JTextField totalSalaryText;
    private javax.swing.JTextField uniformText;
    private javax.swing.JTextField workhoursText;
    private javax.swing.JTextField workrateText;
    private javax.swing.JCheckBox yesCheckBox;
    // End of variables declaration//GEN-END:variables
  private void fillNicComboBox() throws ClassNotFoundException, SQLException {
        ArrayList<sec.anchor.model.Employee> employees = EmployeeController.loadNicCombo();
        nicCombo.removeAllItems();
        for (sec.anchor.model.Employee e : employees) {
            nicCombo.addItem(e);
        }
    }

    private void searchEmp() {
        if (nicCombo.getSelectedItem() != null) {
            try {
                String[] nic = (nicCombo.getSelectedItem() + "").split("-");
                sec.anchor.model.Employee employee = EmployeeController.searchEmployee(nic[nic.length - 1]);
                if (employee != null) {
                    nameLabel.setText(employee.getName());
                    addressLabel.setText(employee.getAddress());
                    contactLabel.setText(employee.getContactno() + "");
                    etflabel.setText(employee.getEtfno());
                    epflabel.setText(employee.getEpfno());

                } else {
                    // JOptionPane.showMessageDialog(this, "No Employee Found! Please add new one");
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(UpdateEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void searchSalaryCons() {
        if (nicCombo.getSelectedItem() != null) {
            try {
                nic = (nicCombo.getSelectedItem() + "").split("-");
                searchSalaryCons = SalaryConstController.searchSalaryCons(nic[nic.length - 1]);

                if (searchSalaryCons != null) {

                    yesCheckBox.setEnabled(true);
                    basicSalaryText.setText(searchSalaryCons.getBasic_salary() + "");
                    System.out.println(searchSalaryCons.getBasic_salary() + "");
                    budgetText.setText(searchSalaryCons.getBudget_al() + "");
                    workrateText.setText(searchSalaryCons.getWorkrate() + "");
                    overTimeText.setText(searchSalaryCons.getOtlimit() + "");
                    epfempconText.setText(searchSalaryCons.getEpf_empl() + "");
                    etfempText.setText(searchSalaryCons.getEtf_emp() + "");
                    epfempcompText.setText(searchSalaryCons.getEpf_company() + "");
                    double epfcompany = (searchSalaryCons.getBasic_salary() + searchSalaryCons.getBudget_al()) * searchSalaryCons.getEpf_company() / 100;
                    double etfcompnay = (searchSalaryCons.getBasic_salary() + searchSalaryCons.getBudget_al()) * searchSalaryCons.getEtf_emp() / 100;
                    totalEPFETFText.setText((epfcompany + etfcompnay) + "");
                    epfEmpAmountText.setText(((searchSalaryCons.getBasic_salary() + searchSalaryCons.getBudget_al()) * searchSalaryCons.getEpf_empl() / 100) + "");
                    etfEmpamountText.setText(etfcompnay + "");
                    epfComAmountText.setText(epfcompany + "");
                    epfDeduction.setText((searchSalaryCons.isDeduction()) + "");
                    if (searchSalaryCons.isDeduction()) {
                        yesCheckBox.setSelected(true);
                    } else {
                        yesCheckBox.setEnabled(false);
                    }
                } else {
                    // JOptionPane.showMessageDialog(this, "No Employee Found! Please add new one");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void paysheet1() {
        String reportSource = "/sec/anchor/reports/PaySheet.jrxml";
        InputStream is = null;
        try {
            is = getClass().getResourceAsStream(reportSource);
            JasperReport jasperReport = (JasperReport) JasperCompileManager.compileReport(is);
            Map<String, Object> param = new HashMap<>();
            param.put("NAME", nameLabel.getText());
            param.put("NIC", nic[nic.length - 1]);
            if (searchSalaryCons.isDeduction() && yesCheckBox.isSelected()) {
                param.put("EPFNO", EmployeeController.searchEPFno(nic[nic.length - 1]) + "");
                param.put("EPFEMP", epfEmpAmountText.getText());
            } else {
                param.put("EPFNO", "-");
                param.put("EPFEMP", "-");
            }
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-YYYY");
            String date = simpleDateFormat.format(datefrompicker.getDate());
            param.put("MONTH", date);

            param.put("BASIC", basicSalaryText.getText());
            param.put("BUDGETAL", budgetText.getText());
            param.put("OT", otText.getText());
            param.put("OTHERAL", otherAlText.getText());
            param.put("TOTAL", totalSalaryText.getText());

            param.put("UNIFORM", uniformText.getText());
            param.put("ADVANCE", advanceText.getText());
            param.put("FINE", fineText.getText());
            param.put("TOTALD", totaldedction + "");
            param.put("NETSAL", netSalary.getText());
            param.put("EPFCOMP", epfComAmountText.getText());
            param.put("ETF", etfEmpamountText.getText());
            param.put("TOTALCOMP", totalEPFETFText.getText());
            JasperPrint jasperPrint;
            jasperPrint = JasperFillManager.fillReport(jasperReport, param);
            JasperViewer.viewReport(jasperPrint, false);
            //...
        } catch (JRException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                is.close();
            } catch (Exception exp) {
            }
        }
    }

    private void paysheet2() {
        String reportSource = "/sec/anchor/reports/PaySheet.jrxml";
        InputStream is = null;
        try {
            is = getClass().getResourceAsStream(reportSource);
            JasperReport jasperReport = (JasperReport) JasperCompileManager.compileReport(is);
            Map<String, Object> param = new HashMap<>();
            param.put("NAME", nameLabel.getText());
            param.put("NIC", nic[nic.length - 1]);
            param.put("EPFNO", EmployeeController.searchEPFno(nic[nic.length - 1]) + "");
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-YYYY");
            String date = simpleDateFormat.format(datefrompicker.getDate());
            param.put("MONTH", date);
            param.put("BASIC", "-");
            param.put("BUDGETAL", "-");
            param.put("OT", "-");
            param.put("OTHERAL", "-");
            param.put("TOTAL", totalSalaryText.getText());
            param.put("EPFEMP", "-");
            param.put("UNIFORM", uniformText.getText());
            param.put("ADVANCE", advanceText.getText());
            param.put("FINE", fineText.getText());
            param.put("TOTALD", totaldedction + "");
            param.put("NETSAL", netSalary.getText());
            param.put("EPFCOMP", "-");
            param.put("ETF", "-");
            param.put("TOTALCOMP", "-");
            JasperPrint jasperPrint;
            jasperPrint = JasperFillManager.fillReport(jasperReport, param);
            JasperViewer.viewReport(jasperPrint, false);
            //...
        } catch (JRException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                is.close();
            } catch (Exception exp) {
            }
        }
    }

    private void emptyFields() {
        nameLabel.setText(null);
        addressLabel.setText(null);
        contactLabel.setText(null);
        etflabel.setText(null);
        epflabel.setText(null);
        workhoursText.setText(null);
        otText.setText(null);
        otherAlText.setText(null);
        totalSalaryText.setText(null);
        netSalary.setText(null);
        advanceText.setText("0.00");
        uniformText.setText("0.00");
        fineText.setText("0.00");
        totalSalary = 0.00;
        netSalaryPerMonth = 0.00;
        fullBasic = 0.00;
        totaldedction = 0.00;
        datefrompicker.setDate(null);
        datetopicker.setDate(null);
        nicCombo.setSelectedItem(null);
        epfDeduction.setText(null);
        extraText.setText("0.00");
    }

    private void isPayed() {

        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-YYYY");
        String date = simpleDateFormat.format(datefrompicker.getDate());
        String mon = date.split("-")[0];
        String year = date.split("-")[1];
        String month = getMonthForInt(Integer.parseInt(mon) - 1);
        try {
            String paiddate = SalaryController.isSalaryPayed(nic[nic.length - 1], month, year);
            System.out.println(paiddate);
            if (paiddate.equals("")) {
                isPayed = false;
            } else {
                JOptionPane.showMessageDialog(this, nic[0] + " Already paid for " + month + "-" + year + " on " + paiddate, "Alert", JOptionPane.WARNING_MESSAGE);
                datefrompicker.setDate(null);
                datetopicker.setDate(null);
                nicCombo.setSelectedItem(null);
                workhoursText.setText(null);
                otText.setText(null);
                otherAlText.setText(null);
                totalSalaryText.setText(null);
                netSalary.setText("0.00");
                nicCombo.requestFocus();
                isPayed = true;
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PaySalary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    String getMonthForInt(int num) {
        String month = "wrong";
        DateFormatSymbols dfs = new DateFormatSymbols();
        String[] months = dfs.getMonths();
        if (num >= 0 && num <= 11) {
            month = months[num];
        }
        return month;
    }

    private void resetButton() {
        advanceText.setEditable(true);
        fineText.setEditable(true);
        uniformText.setEditable(true);
        netSalary.setText(totalSalaryText.getText());
        payButton.setEnabled(false);
    }
}
